name: Integration Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  integration-tests:
    name: Test dart_neo4j with Neo4j containers
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dart-version: ["3.8.0"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.dart-version }}

      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            **/.dart_tool
            **/pubspec.lock
          key: ${{ runner.os }}-pub-${{ hashFiles('packages/*/pubspec.yaml', 'pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dpk
        run: dart pub global activate dpk

      - name: Get dependencies
        run: dpk get

      - name: Generate SSL certificates
        run: |
          chmod +x scripts/generate-ssl-certs.sh
          ./scripts/generate-ssl-certs.sh

      - name: Start Neo4j containers
        run: docker compose up -d
        env:
          COMPOSE_HTTP_TIMEOUT: 120

      - name: Verify Neo4j containers are healthy
        run: |
          echo "Checking container status..."
          docker compose ps

          # Verify basic connectivity to each instance
          echo "Testing neo4j-single connection..."
          until docker exec neo4j-single cypher-shell -u neo4j -p password 'RETURN "single" as instance' 2>/dev/null; do
            echo "Waiting for neo4j-single..."
            sleep 5
          done

          echo "Testing cluster connectivity..."
          until docker exec neo4j-core1 cypher-shell -u neo4j -p password 'RETURN "cluster ready" as status' 2>/dev/null; do
            echo "Waiting for neo4j cluster..."
            sleep 5
          done

          echo "Checking SSL container status..."
          docker logs neo4j-single-ssl --tail 10
          docker logs neo4j-self-signed --tail 10

          echo "Testing SSL container HTTP interfaces..."
          curl -f http://localhost:7478/ || echo "SSL container HTTP not ready"
          curl -f http://localhost:7479/ || echo "Self-signed container HTTP not ready"

          echo "Basic Neo4j instances are ready!"
          echo "SSL containers status checked - Dart tests will handle SSL connectivity."

      - name: Fix SSL certificate permissions
        run: |
          # Neo4j containers change ownership of ssl-certs directory, fix it
          sudo chown -R runner:docker ssl-certs/
          sudo chmod 755 ssl-certs/
          sudo chmod 644 ssl-certs/*

      - name: Run dart_neo4j integration tests
        run: dpk run test:neo4j
        env:
          SSL_CERTS_PATH: ${{ github.workspace }}/ssl-certs

      - name: Stop Neo4j containers
        if: always()
        run: docker compose down -v